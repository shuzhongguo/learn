分布式链路追踪系统Sleuth和ZipKin
----------------------------------------------
官网地址
https://cloud.spring.io/spring-cloud-static/Finchley.SR2/single/spring-cloud.html

第一步：什么是Sleuth
************************************************
	一个组件，专门用于记录链路数据的开源组件

	[order-service,96f95a0dd81fe3ab,852ef4cfcdecabf3,false]

	1、第一个值，spring.application.name的值
	
	2、第二个值，96f95a0dd81fe3ab ，sleuth生成的一个ID，叫Trace ID，用来标识一条请求链路，一条请求链路中包含一个Trace ID，多个Span ID
	
	3、第三个值，852ef4cfcdecabf3、spanid 基本的工作单元，获取元数据，如发送一个http

	4、第四个值：false，是否要将该信息输出到zipkin服务中来收集和展示。
	
第二步：添加依赖
************************************************
	在官网中找到48.3.2 Sleuth with Zipkin via HTTP这里下面的语言是：

	If you want both Sleuth and Zipkin, 
	add the spring-cloud-starter-zipkin dependency.

	The following example shows how to do so for Maven:
	要添加依赖如下：
	<dependency> 
		<groupId>org.springframework.cloud</groupId>
		<artifactId>spring-cloud-starter-zipkin</artifactId>
	</dependency>
	
第三步：添加zipkin的url地址
	************************************************
	这里如果是zipkin是在本地，就不用设置，因为默认就是：
	@ConfigurationProperties("spring.zipkin")
	public class ZipkinProperties {
		/**
		 *  URL of the zipkin query server instance. You can also provide
		 *  the service id of the Zipkin server if Zipkin's registered in
		 *  service discovery (e.g. http://zipkinserver/)
		 */
		private String baseUrl = "http://localhost:9411/";
		
	如果不是本地的就设置：
	spring:
	  zipkin:
		base-url: http://192.168.184.132:9411/
		
第四步：拓展	
		1、同类产品
			鹰眼（EagleEye）
			CAT
			twitter开源zipkin，结合sleuth
			Pinpoint，运用JavaAgent字节码增强技术
			StackDriver Trace (Google)
			
		2、知识拓展：OpenTracing
		OpenTracing 已进入 CNCF，正在为全球的分布式追踪，提供统一的概念和数据标准。 
		通过提供平台无关、厂商无关的 API，使得开发人员能够方便的添加（或更换）追踪系统的实现。

		推荐阅读：
			http://blog.daocloud.io/cncf-3/
			https://www.zhihu.com/question/27994350
			https://yq.aliyun.com/articles/514488?utm_content=m_43347
	




